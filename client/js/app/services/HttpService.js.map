{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mCAAaA,W;;;;;;;kDAoCKC,G,EAAI;AACd,4BAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN,CAAZ,KACK,OAAOH,GAAP;AACR;;;wCAEGI,G,EAAI;AAAA;;AACJ,+BAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,mCAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBADH,EAEFM,IAFE,CAEG;AAAA,mCAAON,IAAIQ,IAAJ,EAAP;AAAA,yBAFH,CAAP;AAGH;;;yCAEIJ,G,EAAKK,I,EAAK;AAAA;;AACX,+BAAOJ,MAAMD,GAAN,EAAW;AACdM,qCAAS,EAAE,gBAAgB,kBAAlB,EADK;AAEdC,oCAAQ,MAFM;AAGdC,kCAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHQ,yBAAX,EAKNH,IALM,CAKD;AAAA,mCAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,yBALC,CAAP;AAMH","file":"HttpService.js","sourcesContent":["export class HttpService{\r\n\r\n    // get(url){\r\n    //     // resolve: retorno de sucesso\r\n    //     // reject: erro\r\n    //     return new Promise((resolve, reject) =>{\r\n    //         // Serão realizadas requisições assíncronas com o servidor (AJAX)\r\n    //         let xhr = new XMLHttpRequest();\r\n    //         // Abrindo a conexão [preparando para abrir]\r\n    //         xhr.open('GET', url);\r\n    //         /* Configurações para serem realizadas antes do envio */\r\n    //         xhr.onreadystatechange = () => {\r\n                \r\n    //             /* ESTADOS DE UMA REQUISÃO AJAX\r\n    //                 ** 0: requisição ainda não iniciada\r\n    //                 ** 1: conexão com o servidor estabelecida\r\n    //                 ** 2: requisição recebida\r\n    //                 ** 3: processando requisição\r\n    //                 ** 4: requisição concluída e a resposta está pronta\r\n    //             */\r\n\r\n    //             if(xhr.readyState == 4){\r\n    //                 if(xhr.status == 200){\r\n    //                     resolve(JSON.parse(xhr.responseText));\r\n    //                 }\r\n    //                 else{\r\n    //                     console.log(xhr.responseText);\r\n    //                     reject(xhr.responseText);\r\n    //                 }\r\n    //             }\r\n    //         };\r\n    //         // Enviando a requisi]ção\r\n    //         xhr.send();\r\n    //     });\r\n    // }\r\n\r\n    _handleErrors(res){\r\n        if(!res.ok) throw new Error(res.statusText);\r\n        else return res;\r\n    }\r\n\r\n    get(url){\r\n        return fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json());\r\n    }\r\n\r\n    post(url, dado){\r\n        return fetch(url, {\r\n            headers: { 'Content-type': 'application/json' },\r\n            method: 'post',\r\n            body: JSON.stringify(dado)\r\n        })\r\n        .then(res => this._handleErrors(res));\r\n    }\r\n}"]}