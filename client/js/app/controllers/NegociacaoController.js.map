{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","Negociacao","NegociacoesView","MensagemView","NegociacaoService","DateHelper","Bind","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_service","_init","lista","then","negociacoes","forEach","adiciona","negociacao","catch","texto","erro","setInterval","importaNegociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaForumlario","textParaData","value","parseInt","parseFloat","focus","apaga","esvazia","importa","ordenaPor","alert","negociacaoController","currentInstance"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import {ListaNegociacoes} from '../models/ListaNegociacoes';\r\nimport {Mensagem} from '../models/Mensagem';\r\nimport {Negociacao} from '../models/Negociacao';\r\nimport {NegociacoesView} from '../views/NegociacoesView';\r\nimport {MensagemView} from '../views/MensagemView';\r\nimport {NegociacaoService} from '../services/NegociacaoService';\r\nimport {DateHelper} from '../helpers/DateHelper';\r\nimport {Bind} from '../helpers/Bind';\r\n\r\nclass NegociacaoController{\r\n    \r\n    constructor(){\r\n        // Setando a função querySelector na variável $\r\n        // Uso o bind() para que o querySelector continue se mantendo associado ao document\r\n        let $ = document.querySelector.bind(document);\r\n       \r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n        \r\n        this._listaNegociacoes = new Bind(\r\n            new ListaNegociacoes(),\r\n            new NegociacoesView($('#negociacoesView')),\r\n            'adiciona', 'esvazia'\r\n        );\r\n       \r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new MensagemView($('#mensagemView')),\r\n            'texto'\r\n        );\r\n\r\n        this._service = new NegociacaoService();\r\n\r\n        this._init();\r\n    }\r\n\r\n    _init(){\r\n        // Carrega as negociações do IndexDB\r\n        this._service\r\n            .lista()\r\n            .then(negociacoes =>\r\n                negociacoes.forEach(negociacao => \r\n                    this._listaNegociacoes.adiciona(negociacao)))\r\n            .catch(erro => this._mensagem.texto = erro);\r\n                \r\n        // Importa as negociações do webservice automaticamente\r\n        setInterval(() => {this.importaNegociacoes();}, 3000);\r\n    }\r\n\r\n    adiciona(event){\r\n        // Cancela o comportamento padrão do evento (aka submit do formulário)\r\n        event.preventDefault();\r\n        \r\n        let negociacao = this._criaNegociacao();\r\n        this._service\r\n            .cadastra(negociacao)\r\n            .then(mensagem => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = mensagem;\r\n                this._limpaForumlario();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro)\r\n        \r\n        \r\n    }\r\n\r\n    _criaNegociacao(){\r\n        return new Negociacao(\r\n            DateHelper.textParaData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        );\r\n    }\r\n\r\n    _limpaForumlario(){\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n        this._inputData.focus();\r\n    }\r\n\r\n    apaga(){\r\n        this._service\r\n            .apaga()\r\n            .then(mensagem => {\r\n                this._mensagem.texto = mensagem;\r\n                this._listaNegociacoes.esvazia();\r\n            })\r\n            .catch(erro => this._mensagem.texto = erro);\r\n    }\r\n\r\n    importaNegociacoes(){\r\n        // A promise (promessa) é o resultado FUTURO de uma operação\r\n        this._service\r\n            .importa(this._listaNegociacoes.negociacoes)\r\n            .then(negociacoes => negociacoes.forEach(negociacao => {\r\n                this._listaNegociacoes.adiciona(negociacao);\r\n                this._mensagem.texto = 'Negociações do período importadas'\r\n            }))\r\n            .catch(erro => this._mensagem.texto = erro);\r\n        \r\n    }\r\n\r\n    ordena(ordenaPor){\r\n        alert(ordenaPor);\r\n    }\r\n    \r\n}\r\n\r\nlet negociacaoController = new NegociacaoController();\r\n\r\nexport function currentInstance(){\r\n    return negociacaoController;\r\n}"]}