{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_httpService","Promise","resolve","reject","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","console","log","erro","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","retorno","reduce","arrayAchatado","array","concat","forEach","push","negociacao","getConnection","connection","dao","adiciona","Error","listaTodas","apagaTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExistente","Erro"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoService{\r\n\r\n    constructor(){\r\n        this._httpService = new HttpService();\r\n    }\r\n    \r\n    obterNegociacoesDaSemana(){\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            this._httpService.get('negociacoes/semana')\r\n            .then(negociacoes => {\r\n                resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possível obter as negociações da semana')\r\n            });\r\n        });\r\n        \r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior(){      \r\n        return new Promise((resolve, reject) => {\r\n            this._httpService.get('negociacoes/anterior')\r\n            .then(negociacoes => {\r\n                resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possível obter as negociações da semana')\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada(){      \r\n       return new Promise((resolve, reject) => {\r\n            this._httpService.get('negociacoes/retrasada')\r\n            .then(negociacoes => {\r\n                resolve(negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                reject('Não foi possível obter as negociações da semana')\r\n            });\r\n        });\r\n    }\r\n\r\n    obterNegociacoes(){\r\n        return new Promise((resolve, reject) => {\r\n            Promise.all([\r\n                this.obterNegociacoesDaSemana(),\r\n                this.obterNegociacoesDaSemanaAnterior(),\r\n                this.obterNegociacoesDaSemanaRetrasada()\r\n            ])\r\n                .then(negociacoes => {\r\n                    let retorno = [];\r\n                    negociacoes\r\n                        .reduce((arrayAchatado, array) => arrayAchatado.concat(array), [])\r\n                        .forEach(negociacao => retorno.push(negociacao));\r\n                    resolve(retorno);\r\n                })\r\n                .catch(erro => reject(erro));\r\n        });\r\n    }\r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso!')\r\n            .catch(() => {\r\n                throw new Error('Não foi possível adicionar a negociação')\r\n            });\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodas())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível obter as negociações');\r\n            })\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possível apagar as negociações');\r\n            });\r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => \r\n                negociacoes\r\n                    .filter(negociacao =>\r\n                        !listaAtual\r\n                            .some(negociacaoExistente => \r\n                                JSON.stringify(negociacao) == JSON.stringify(negociacaoExistente)))\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Erro('Não foi possível importar as negociações')\r\n            });\r\n    }\r\n        \r\n}"]}